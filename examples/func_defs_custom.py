#-----------------------------------------------------------------
# pycparser: func_defs.py
#
# Using pycparser for printing out all the functions defined in a
# C file.
#
# This is a simple example of traversing the AST generated by
# pycparser. Call it from the root directory of pycparser.
#
# Eli Bendersky [https://eli.thegreenplace.net/]
# License: BSD
#-----------------------------------------------------------------
import sys

# This is not required if you've installed pycparser into
# your site-packages/ with setup.py
sys.path.extend(['.', '..'])

from pycparser import c_ast, parse_file


# A simple visitor for FuncDef nodes that prints the names and
# locations of function definitions.
class FuncDefVisitor(c_ast.NodeVisitor):
    def visit_FuncDef(self, node):
        if type(node.decl.type.type) != c_ast.Struct:
            # print('%s at %s' % (node.decl.name, node.decl.coord))

            # node.decl.type.type.show()
            # 函数返回值类型
            print('%s ' % node.decl.type.type.type.names[0], end='')

            # 函数名称
            print('%s(' % (node.decl.name), end='')

            # 参数
            for param_decl in node.decl.type.args.params:
                # print('Arg name: %s' % param_decl.name)
                if type(param_decl.type.type) is c_ast.TypeDecl:
                    print('%s *' % param_decl.type.type.type.names[0], end='')
                else:
                    print('%s' % param_decl.type.type.names[0], end='')

                if param_decl != node.decl.type.args.params[-1]:
                    print(', ', end='')

            print(')\n')

hk32c0 = ['-E', 
        r'-I..\utils\fake_libc_include', 
        r'-IC:\Users\Dareplay\Documents\Workspace\CleanRobot\lib\hk32c0\HK32C030xx_Lib\inc',
        r'-IC:\Users\Dareplay\Documents\Workspace\CleanRobot\lib\hk32c0\CMSIS\CM0\Core',
        r'-IC:\Users\Dareplay\Documents\Workspace\CleanRobot\lib\hk32c0\CMSIS\HK32C030xx\Include',
        r'-IC:\Users\Dareplay\Documents\Workspace\CleanRobot\project',
        r'-IC:\Users\Dareplay\Documents\Workspace\CleanRobot\project\ESMC01_G2N0B0A_S040',
        r'-IC:\Users\Dareplay\Documents\Workspace\CleanRobot\src',
        r'-IC:\Users\Dareplay\Documents\Workspace\CleanRobot\src\sensors',
        r'-IC:\Users\Dareplay\Documents\Workspace\CleanRobot\project\hk32c0',
        r'-IC:\Users\Dareplay\Documents\Workspace\CleanRobot\project\hk32c0\driver',
        r'-D__TASKING__']

mm32f0140 = ['-E', 
        r'-I..\utils\fake_libc_include', 
        r'-IC:\Users\Dareplay\Documents\Workspace\CleanRobot\lib\mm32f0140\KEIL_Core',
        r'-IC:\Users\Dareplay\Documents\Workspace\CleanRobot\lib\mm32f0140\Include',
        r'-IC:\Users\Dareplay\Documents\Workspace\CleanRobot\lib\mm32f0140\HAL_Lib\Inc',
        r'-IC:\Users\Dareplay\Documents\Workspace\CleanRobot\project',
        r'-IC:\Users\Dareplay\Documents\Workspace\CleanRobot\project\EHDC01_G4T4L0C2_S04B_gtchd9f5',
        r'-IC:\Users\Dareplay\Documents\Workspace\CleanRobot\src',
        r'-IC:\Users\Dareplay\Documents\Workspace\CleanRobot\src\sensors',
        r'-IC:\Users\Dareplay\Documents\Workspace\CleanRobot\project\mm32f0140',
        r'-IC:\Users\Dareplay\Documents\Workspace\CleanRobot\project\mm32f0140\driver',
        r'-D__TASKING__']

def show_func_defs(filename, opt):
    # Note that cpp is used. Provide a path to your own cpp or
    # make sure one exists in PATH.
    ast = parse_file(filename, use_cpp=True,
                     cpp_path='clang',
                     cpp_args=opt)

    v = FuncDefVisitor()
    v.visit(ast)


if __name__ == "__main__":
    if len(sys.argv) > 2:
        if sys.argv[1] == 'mm32f0140':
            opt = mm32f0140
        elif sys.argv[1] == 'hk32c0':
            opt = hk32c0
            
        filename  = sys.argv[2]
    else:
        filename = 'examples/c_files/memmgr.c'

    show_func_defs(filename, opt)
